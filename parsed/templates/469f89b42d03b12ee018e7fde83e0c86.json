{
  "components/common/responsive-image1": "{{!--\r\n    This file implements the lazysizes srcset pattern (as seen on\r\n    https://github.com/aFarkas/lazysizes#modern-transparent-srcset-pattern) for\r\n    maximum performance on modern browsers and reasonable compatibility with legacy\r\n    browsers.\r\n    \r\n    There are a few important arguments to know about when using this component:\r\n    `lazyload`:\r\n      - If set to 'lazyload+lqip', will load a low-res image which will be replaced\r\n        by lazysizes - ensuring that SOME content is shown immediately on page load.\r\n        Without LQIP, a transparent gif will be used instead, which reduces the number\r\n        of requests needed to load the page, making it even faster.\r\n      - If set to 'lazyload', the browser will not load the full-size image at first,\r\n        instead the lazysizes plugin will load it progressively after page load.\r\n        This improves the load speed of the page, but it should be disabled for\r\n        high-priority above-the-fold images.\r\n      - If set to 'disabled', will not attempt to lazyload the image and instead\r\n        tell the browser to load it immediately. Use this for high-priority images\r\n        that are above the fold.\r\n    \r\n    `fallback_size`:\r\n      This is the size to use for this image in legacy browsers that do not support\r\n      srcset. Can be defined as a pixel bounding-box size (e.g. \"123x123) or\r\n      inherent width (e.g. \"123w\").\r\n    \r\n    `class`:\r\n      The CSS classes to add to the image, e.g. \"card-image\". If lazyloading is\r\n      enabled, all images will have the \"lazyload\" class so that lazysizes will\r\n      target them automatically.\r\n    \r\n    `otherAttributes`:\r\n      Any other HTML attributes you want on the img tag, for example \"height='100' width='100'\"\r\n    \r\n    `default_image`:\r\n      The default image to use if `image` is undefined or falsy. Should be a theme\r\n      asset, usually defined as a relative path in the theme config. If a default\r\n      image is not provided, you'll get an image tag with no image if the primary\r\n      image is undefined.\r\n    \r\n    `lqip_size`:\r\n      If you want to specify a particular size for the LQIP image, you can do so\r\n      with this argument. A default of 80 pixels wide will be used otherwise. This\r\n      argument has no effect if the lazyload mode is not \"lazyload+lqip\".\r\n    \r\n    --}}\r\n    <img\r\n      {{#if image}}\r\n        {{!-- Get the default image for legacy browsers that do not support srcset--}}\r\n        src=\"{{getImageSrcset image 1x=(default fallback_size '160w')}}\"\r\n        alt=\"{{image.alt}}\"\r\n        title=\"{{image.alt}}\"\r\n        {{!-- Allow lazysizes to generate the 'sizes' attribute automatically --}}\r\n        data-sizes=\"auto\"\r\n        \r\n        {{!-- If lazyloading is disabled, just use \"srcset\". If it is not disabled,\r\n        use \"data-srcset\" so lazysizes will use this after page load --}}\r\n        {{!--\r\n        Generate the srcset string using the default sizes defined in the helper. This will allow the browser to\r\n        pick the best-sized image based on its own understanding of how it will render the page.\r\n        --}}\r\n        {{#unless lazyload '==' 'disabled'}}data-{{/unless}}srcset=\"{{getImageSrcset image use_default_sizes=true }}\"\r\n      {{else if default_image}}\r\n        src=\"{{cdn default_image}}\"\r\n      {{/if}}\r\n      class=\"{{#unless lazyload '==' 'disabled'}}lazyload{{/unless}}{{#if class}} {{class}}{{/if}}\"\r\n      {{#if lazyload '==' 'lazyload'}}\r\n        loading=\"lazy\"\r\n      {{/if}}\r\n      style=\"object-fit: {{#if fit '==' 'image-contain'}}contain{{else}}cover{{/if}};\"\r\n      {{otherAttributes}}\r\n    />\r\n    "
}
